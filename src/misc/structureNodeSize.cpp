// Generated by utility tool. DO NOT MODIFY!
#include "pch.h"
#pragma hdrstop
#include "structureChain.h"

namespace magma
{
size_t StructureChain::sizeofNode(VkStructureType sType) noexcept
{
    if (VK_STRUCTURE_TYPE_FENCE_CREATE_INFO == sType) return sizeof(VkFenceCreateInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR == sType) return sizeof(VkDeviceGroupSwapchainCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO == sType) return sizeof(VkCommandBufferAllocateInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO == sType) return sizeof(VkPipelineLayoutCreateInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS == sType) return sizeof(VkDeviceImageMemoryRequirements);
    if (VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR == sType) return sizeof(VkAcquireNextImageInfoKHR);
    if (VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV == sType) return sizeof(VkCheckpointData2NV);
    if (VK_STRUCTURE_TYPE_APPLICATION_INFO == sType) return sizeof(VkApplicationInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR == sType) return sizeof(VkDeviceMemoryOpaqueCaptureAddressInfoKHR);
    if (VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI == sType) return sizeof(VkSubpassShadingPipelineCreateInfoHUAWEI);
    if (VK_STRUCTURE_TYPE_SUBMIT_INFO == sType) return sizeof(VkSubmitInfo);
    if (VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO == sType) return sizeof(VkInstanceCreateInfo);
    if (VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO == sType) return sizeof(VkBindImageMemoryDeviceGroupInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO == sType) return sizeof(VkDeviceCreateInfo);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR == sType) return sizeof(VkAccelerationStructureGeometryAabbsDataKHR);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO == sType) return sizeof(VkSemaphoreCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES == sType) return sizeof(VkPhysicalDeviceVulkan11Features);
    if (VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR == sType) return sizeof(VkMemoryAllocateFlagsInfoKHR);
    if (VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO == sType) return sizeof(VkDeviceQueueCreateInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO == sType) return sizeof(VkDeviceGroupSubmitInfo);
    if (VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO == sType) return sizeof(VkMemoryAllocateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES == sType) return sizeof(VkPhysicalDeviceSubgroupSizeControlFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES == sType) return sizeof(VkPhysicalDeviceDynamicRenderingFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR == sType) return sizeof(VkPhysicalDeviceProperties2KHR);
    if (VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE == sType) return sizeof(VkMappedMemoryRange);
    if (VK_STRUCTURE_TYPE_BIND_SPARSE_INFO == sType) return sizeof(VkBindSparseInfo);
    if (VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT == sType) return sizeof(VkHeadlessSurfaceCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES == sType) return sizeof(VkPhysicalDeviceVulkan12Properties);
    if (VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS == sType) return sizeof(VkMemoryDedicatedRequirements);
    if (VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT == sType) return sizeof(VkPipelineCreationFeedbackCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO == sType) return sizeof(VkDescriptorPoolCreateInfo);
    if (VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV == sType) return sizeof(VkQueueFamilyCheckpointPropertiesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES == sType) return sizeof(VkPhysicalDeviceShaderFloat16Int8Features);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceRayQueryFeaturesKHR);
    if (VK_STRUCTURE_TYPE_EVENT_CREATE_INFO == sType) return sizeof(VkEventCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceProvokingVertexPropertiesEXT);
    if (VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR == sType) return sizeof(VkSparseImageFormatProperties2KHR);
    if (VK_STRUCTURE_TYPE_RENDERING_INFO_KHR == sType) return sizeof(VkRenderingInfoKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO == sType) return sizeof(VkPipelineShaderStageCreateInfo);
    if (VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO == sType) return sizeof(VkQueryPoolCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceDepthClipEnableFeaturesEXT);
    if (VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR == sType) return sizeof(VkCopyBufferInfo2KHR);
    if (VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET == sType) return sizeof(VkCopyDescriptorSet);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDevicePointClippingPropertiesKHR);
    if (VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO == sType) return sizeof(VkBufferViewCreateInfo);
    if (VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO == sType) return sizeof(VkImageStencilUsageCreateInfo);
    if (VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO == sType) return sizeof(VkBufferCreateInfo);
    if (VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV == sType) return sizeof(VkExternalMemoryImageCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO == sType) return sizeof(VkImageCreateInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT == sType) return sizeof(VkPipelineRasterizationStateStreamCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO == sType) return sizeof(VkImageViewCreateInfo);
    if (VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO == sType) return sizeof(VkShaderModuleCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDevicePushDescriptorPropertiesKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO == sType) return sizeof(VkPipelineCacheCreateInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO == sType) return sizeof(VkPipelineVertexInputStateCreateInfo);
    if (VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO == sType) return sizeof(VkSamplerReductionModeCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT);
    if (VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR == sType) return sizeof(VkMemoryDedicatedRequirementsKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO == sType) return sizeof(VkPipelineMultisampleStateCreateInfo);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR == sType) return sizeof(VkAccelerationStructureVersionInfoKHR);
    if (VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR == sType) return sizeof(VkRayTracingPipelineInterfaceCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_COPY_2 == sType) return sizeof(VkImageCopy2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceFloat16Int8FeaturesKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO == sType) return sizeof(VkPipelineInputAssemblyStateCreateInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO == sType) return sizeof(VkPipelineTessellationStateCreateInfo);
    if (VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO == sType) return sizeof(VkBindBufferMemoryInfo);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO == sType) return sizeof(VkRenderPassMultiviewCreateInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO == sType) return sizeof(VkPipelineViewportStateCreateInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT == sType) return sizeof(VkDeviceEventInfoEXT);
    if (VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT == sType) return sizeof(VkDeviceDeviceMemoryReportCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO == sType) return sizeof(VkPipelineRasterizationStateCreateInfo);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO == sType) return sizeof(VkDescriptorSetLayoutCreateInfo);
    if (VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2 == sType) return sizeof(VkImageResolve2);
    if (VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO == sType) return sizeof(VkPipelineDepthStencilStateCreateInfo);
    if (VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT == sType) return sizeof(VkDrmFormatModifierPropertiesList2EXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO == sType) return sizeof(VkPipelineColorBlendStateCreateInfo);
    if (VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER == sType) return sizeof(VkBufferMemoryBarrier);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR == sType) return sizeof(VkSemaphoreSignalInfoKHR);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO == sType) return sizeof(VkCommandBufferInheritanceInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineFragmentShadingRateEnumStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceColorWriteEnableFeaturesEXT);
    if (VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR == sType) return sizeof(VkSharedPresentSurfaceCapabilitiesKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT == sType) return sizeof(VkImageDrmFormatModifierExplicitCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR == sType) return sizeof(VkImageSwapchainCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO == sType) return sizeof(VkPipelineDynamicStateCreateInfo);
    if (VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO == sType) return sizeof(VkSamplerCreateInfo);
    if (VK_STRUCTURE_TYPE_HDR_METADATA_EXT == sType) return sizeof(VkHdrMetadataEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceCoverageReductionModeFeaturesNV);
    if (VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO == sType) return sizeof(VkGraphicsPipelineCreateInfo);
    if (VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT == sType) return sizeof(VkDrmFormatModifierPropertiesListEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT == sType) return sizeof(VkDebugUtilsObjectNameInfoEXT);
    if (VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO == sType) return sizeof(VkBindImageMemoryInfo);
    if (VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO == sType) return sizeof(VkComputePipelineCreateInfo);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO == sType) return sizeof(VkDescriptorSetAllocateInfo);
    if (VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR == sType) return sizeof(VkImageFormatProperties2KHR);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO == sType) return sizeof(VkDeviceGroupBindSparseInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD == sType) return sizeof(VkPipelineRasterizationStateRasterizationOrderAMD);
    if (VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO == sType) return sizeof(VkCommandPoolCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES == sType) return sizeof(VkPhysicalDeviceMaintenance3Properties);
    if (VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET == sType) return sizeof(VkWriteDescriptorSet);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER == sType) return sizeof(VkImageMemoryBarrier);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT);
    if (VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO == sType) return sizeof(VkFramebufferCreateInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO == sType) return sizeof(VkDeviceGroupCommandBufferBeginInfo);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO == sType) return sizeof(VkRenderPassCreateInfo);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO == sType) return sizeof(VkCommandBufferBeginInfo);
    if (VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT == sType) return sizeof(VkDebugUtilsObjectTagInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES == sType) return sizeof(VkPhysicalDeviceInlineUniformBlockProperties);
    if (VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR == sType) return sizeof(VkDeviceQueueGlobalPriorityCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM == sType) return sizeof(VkPhysicalDeviceImageProcessingFeaturesQCOM);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO == sType) return sizeof(VkRenderPassBeginInfo);
    if (VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 == sType) return sizeof(VkBufferMemoryRequirementsInfo2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES == sType) return sizeof(VkPhysicalDevice16BitStorageFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES == sType) return sizeof(VkPhysicalDeviceDescriptorIndexingProperties);
    if (VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO == sType) return sizeof(VkBufferDeviceAddressInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineRasterizationDepthClipStateCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_MEMORY_BARRIER == sType) return sizeof(VkMemoryBarrier);
    if (VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 == sType) return sizeof(VkImageMemoryBarrier2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES == sType) return sizeof(VkPhysicalDeviceSubgroupProperties);
    if (VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO == sType) return sizeof(VkMemoryDedicatedAllocateInfo);
    if (VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR == sType) return sizeof(VkRenderingFragmentShadingRateAttachmentInfoKHR);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT == sType) return sizeof(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT);
    if (VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT == sType) return sizeof(VkDebugMarkerMarkerInfoEXT);
    if (VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO == sType) return sizeof(VkMemoryAllocateFlagsInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO == sType) return sizeof(VkDeviceGroupRenderPassBeginInfo);
    if (VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV == sType) return sizeof(VkGraphicsPipelineShaderGroupsCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES == sType) return sizeof(VkPhysicalDeviceGroupProperties);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT == sType) return sizeof(VkCommandBufferInheritanceConditionalRenderingInfoEXT);
    if (VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO == sType) return sizeof(VkBindBufferMemoryDeviceGroupInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO == sType) return sizeof(VkDeviceGroupDeviceCreateInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineVertexInputDivisorStateCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD == sType) return sizeof(VkPipelineCompilerControlCreateInfoAMD);
    if (VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 == sType) return sizeof(VkImageMemoryRequirementsInfo2);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR == sType) return sizeof(VkSemaphoreWaitInfoKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 == sType) return sizeof(VkImageSparseMemoryRequirementsInfo2);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT == sType) return sizeof(VkRenderPassSampleLocationsBeginInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT);
    if (VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 == sType) return sizeof(VkMemoryRequirements2);
    if (VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2 == sType) return sizeof(VkCopyImageInfo2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceSampleLocationsPropertiesEXT);
    if (VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 == sType) return sizeof(VkSparseImageMemoryRequirements2);
    if (VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2 == sType) return sizeof(VkCopyImageToBufferInfo2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 == sType) return sizeof(VkPhysicalDeviceFeatures2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 == sType) return sizeof(VkPhysicalDeviceProperties2);
    if (VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT == sType) return sizeof(VkDeviceMemoryReportCallbackDataEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT == sType) return sizeof(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT);
    if (VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 == sType) return sizeof(VkFormatProperties2);
    if (VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO == sType) return sizeof(VkProtectedSubmitInfo);
    if (VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 == sType) return sizeof(VkImageFormatProperties2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 == sType) return sizeof(VkPhysicalDeviceImageFormatInfo2);
    if (VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 == sType) return sizeof(VkQueueFamilyProperties2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceImageCompressionControlFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI == sType) return sizeof(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 == sType) return sizeof(VkPhysicalDeviceMemoryProperties2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES == sType) return sizeof(VkPhysicalDeviceShaderTerminateInvocationFeatures);
    if (VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT == sType) return sizeof(VkSurfaceCapabilities2EXT);
    if (VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 == sType) return sizeof(VkSparseImageFormatProperties2);
    if (VK_STRUCTURE_TYPE_RENDERING_INFO == sType) return sizeof(VkRenderingInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 == sType) return sizeof(VkPhysicalDeviceSparseImageFormatInfo2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES == sType) return sizeof(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures);
    if (VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT == sType) return sizeof(VkCalibratedTimestampInfoEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO == sType) return sizeof(VkImageFormatListCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES == sType) return sizeof(VkPhysicalDevicePointClippingProperties);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO == sType) return sizeof(VkRenderPassInputAttachmentAspectCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES == sType) return sizeof(VkPhysicalDeviceMaintenance4Properties);
    if (VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO == sType) return sizeof(VkImageViewUsageCreateInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO == sType) return sizeof(VkPipelineTessellationDomainOriginStateCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES == sType) return sizeof(VkPhysicalDeviceMultiviewFeatures);
    if (VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT == sType) return sizeof(VkValidationFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV == sType) return sizeof(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceIndexTypeUint8FeaturesEXT);
    if (VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR == sType) return sizeof(VkDisplayPlaneInfo2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES == sType) return sizeof(VkPhysicalDeviceMultiviewProperties);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES == sType) return sizeof(VkPhysicalDeviceVariablePointersFeatures);
    if (VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV == sType) return sizeof(VkWriteDescriptorSetAccelerationStructureNV);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO == sType) return sizeof(VkDescriptorSetLayoutBindingFlagsCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES == sType) return sizeof(VkPhysicalDeviceProtectedMemoryFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES == sType) return sizeof(VkPhysicalDeviceProtectedMemoryProperties);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM == sType) return sizeof(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM);
    if (VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 == sType) return sizeof(VkDeviceQueueInfo2);
    if (VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO == sType) return sizeof(VkSamplerYcbcrConversionCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT);
    if (VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO == sType) return sizeof(VkSamplerYcbcrConversionInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR);
    if (VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO == sType) return sizeof(VkBindImagePlaneMemoryInfo);
    if (VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO == sType) return sizeof(VkExportMemoryAllocateInfo);
    if (VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR == sType) return sizeof(VkImportFenceFdInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR == sType) return sizeof(VkPhysicalDeviceFragmentShadingRateKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO == sType) return sizeof(VkImagePlaneMemoryRequirementsInfo);
    if (VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX == sType) return sizeof(VkCuFunctionCreateInfoNVX);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR == sType) return sizeof(VkPhysicalDevice8BitStorageFeaturesKHR);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT == sType) return sizeof(VkAttachmentDescriptionStencilLayout);
    if (VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD == sType) return sizeof(VkDeviceMemoryOverallocationCreateInfoAMD);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES == sType) return sizeof(VkPhysicalDeviceSamplerYcbcrConversionFeatures);
    if (VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES == sType) return sizeof(VkSamplerYcbcrConversionImageFormatProperties);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR == sType) return sizeof(VkSemaphoreSubmitInfoKHR);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR == sType) return sizeof(VkAccelerationStructureCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT == sType) return sizeof(VkSubresourceLayout2EXT);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO == sType) return sizeof(VkDescriptorUpdateTemplateCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO == sType) return sizeof(VkPhysicalDeviceExternalImageFormatInfo);
    if (VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES == sType) return sizeof(VkExternalImageFormatProperties);
    if (VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR == sType) return sizeof(VkExternalSemaphorePropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR == sType) return sizeof(VkPhysicalDevicePresentWaitFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO == sType) return sizeof(VkPhysicalDeviceExternalBufferInfo);
    if (VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES == sType) return sizeof(VkExternalBufferProperties);
    if (VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT == sType) return sizeof(VkDisplayEventInfoEXT);
    if (VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT == sType) return sizeof(VkValidationCacheCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES == sType) return sizeof(VkPhysicalDeviceIDProperties);
    if (VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO == sType) return sizeof(VkExternalMemoryBufferCreateInfo);
    if (VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO == sType) return sizeof(VkExternalMemoryImageCreateInfo);
    if (VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV == sType) return sizeof(VkIndirectCommandsLayoutCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceTransformFeedbackFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO == sType) return sizeof(VkPhysicalDeviceExternalFenceInfo);
    if (VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES == sType) return sizeof(VkExternalFenceProperties);
    if (VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO == sType) return sizeof(VkExportFenceCreateInfo);
    if (VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO == sType) return sizeof(VkExportSemaphoreCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceFloatControlsPropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO == sType) return sizeof(VkPhysicalDeviceExternalSemaphoreInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT);
    if (VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR == sType) return sizeof(VkDisplayPlaneProperties2KHR);
    if (VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES == sType) return sizeof(VkExternalSemaphoreProperties);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT == sType) return sizeof(VkDescriptorSetLayoutSupport);
    if (VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineColorBlendAdvancedStateCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES == sType) return sizeof(VkPhysicalDeviceShaderDrawParametersFeatures);
    if (VK_STRUCTURE_TYPE_SUBPASS_END_INFO == sType) return sizeof(VkSubpassEndInfo);
    if (VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS == sType) return sizeof(VkDeviceBufferMemoryRequirements);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES == sType) return sizeof(VkPhysicalDeviceVulkan11Properties);
    if (VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO == sType) return sizeof(VkPipelineCreationFeedbackCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES == sType) return sizeof(VkPhysicalDeviceVulkan12Features);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceDepthClipControlFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceShaderClockFeaturesKHR);
    if (VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR == sType) return sizeof(VkBindImageMemoryDeviceGroupInfoKHR);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 == sType) return sizeof(VkAttachmentDescription2);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 == sType) return sizeof(VkAttachmentReference2);
    if (VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR == sType) return sizeof(VkMemoryFdPropertiesKHR);
    if (VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 == sType) return sizeof(VkSubpassDescription2);
    if (VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT == sType) return sizeof(VkImageDrmFormatModifierPropertiesEXT);
    if (VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2 == sType) return sizeof(VkSubpassDependency2);
    if (VK_STRUCTURE_TYPE_BUFFER_COPY_2 == sType) return sizeof(VkBufferCopy2);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 == sType) return sizeof(VkRenderPassCreateInfo2);
    if (VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO == sType) return sizeof(VkSubpassBeginInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR);
    if (VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM == sType) return sizeof(VkCopyCommandTransformInfoQCOM);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR == sType) return sizeof(VkAttachmentDescriptionStencilLayoutKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES == sType) return sizeof(VkPhysicalDevice8BitStorageFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES == sType) return sizeof(VkPhysicalDeviceBufferDeviceAddressFeatures);
    if (VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT == sType) return sizeof(VkMultisamplePropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES == sType) return sizeof(VkPhysicalDeviceDriverProperties);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceDepthStencilResolvePropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES == sType) return sizeof(VkPhysicalDeviceShaderAtomicInt64Features);
    if (VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR == sType) return sizeof(VkDisplayModeCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT == sType) return sizeof(VkPhysicalDevice4444FormatsFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES == sType) return sizeof(VkPhysicalDeviceFloatControlsProperties);
    if (VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR == sType) return sizeof(VkPipelineLibraryCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES == sType) return sizeof(VkPhysicalDeviceDescriptorIndexingFeatures);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO == sType) return sizeof(VkDescriptorSetVariableDescriptorCountAllocateInfo);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO == sType) return sizeof(VkCommandBufferSubmitInfo);
    if (VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV == sType) return sizeof(VkDedicatedAllocationMemoryAllocateInfoNV);
    if (VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineCoverageToColorStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT == sType) return sizeof(VkDescriptorSetVariableDescriptorCountLayoutSupport);
    if (VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE == sType) return sizeof(VkSubpassDescriptionDepthStencilResolve);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES == sType) return sizeof(VkPhysicalDeviceDepthStencilResolveProperties);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES == sType) return sizeof(VkPhysicalDeviceScalarBlockLayoutFeatures);
    if (VK_STRUCTURE_TYPE_SUBMIT_INFO_2 == sType) return sizeof(VkSubmitInfo2);
    if (VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR == sType) return sizeof(VkPipelineExecutableInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceMultiviewFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES == sType) return sizeof(VkPhysicalDeviceSamplerFilterMinmaxProperties);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES == sType) return sizeof(VkPhysicalDeviceVulkanMemoryModelFeatures);
    if (VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO == sType) return sizeof(VkFramebufferAttachmentsCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR == sType) return sizeof(VkPhysicalDeviceExternalImageFormatInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES == sType) return sizeof(VkPhysicalDeviceImagelessFramebufferFeatures);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR == sType) return sizeof(VkDeviceGroupPresentInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceProvokingVertexFeaturesEXT);
    if (VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR == sType) return sizeof(VkSubpassDependency2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT);
    if (VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO == sType) return sizeof(VkFramebufferAttachmentImageInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT == sType) return sizeof(VkPhysicalDeviceImageViewImageFormatInfoEXT);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO == sType) return sizeof(VkRenderPassAttachmentBeginInfo);
    if (VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO == sType) return sizeof(VkPipelineRenderingCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES == sType) return sizeof(VkPhysicalDeviceUniformBufferStandardLayoutFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES == sType) return sizeof(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES == sType) return sizeof(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT == sType) return sizeof(VkAttachmentReferenceStencilLayout);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceMaintenance3PropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES == sType) return sizeof(VkPhysicalDeviceHostQueryResetFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR == sType) return sizeof(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV == sType) return sizeof(VkAccelerationStructureGeometryMotionTrianglesDataNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES == sType) return sizeof(VkPhysicalDeviceTimelineSemaphoreFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES == sType) return sizeof(VkPhysicalDeviceTimelineSemaphoreProperties);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO == sType) return sizeof(VkSemaphoreTypeCreateInfo);
    if (VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR == sType) return sizeof(VkDisplayModeProperties2KHR);
    if (VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO == sType) return sizeof(VkTimelineSemaphoreSubmitInfo);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO == sType) return sizeof(VkSemaphoreWaitInfo);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO == sType) return sizeof(VkSemaphoreSignalInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceSynchronization2FeaturesKHR);
    if (VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV == sType) return sizeof(VkFramebufferMixedSamplesCombinationNV);
    if (VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO == sType) return sizeof(VkBufferOpaqueCaptureAddressCreateInfo);
    if (VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO == sType) return sizeof(VkMemoryOpaqueCaptureAddressAllocateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES == sType) return sizeof(VkPhysicalDeviceToolProperties);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD == sType) return sizeof(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD);
    if (VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO == sType) return sizeof(VkDeviceMemoryOpaqueCaptureAddressInfo);
    if (VK_STRUCTURE_TYPE_PRESENT_ID_KHR == sType) return sizeof(VkPresentIdKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES == sType) return sizeof(VkPhysicalDeviceVulkan13Features);
    if (VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR == sType) return sizeof(VkImageBlit2KHR);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT == sType) return sizeof(VkRenderPassCreationFeedbackCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES == sType) return sizeof(VkPhysicalDeviceVulkan13Properties);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV);
    if (VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV == sType) return sizeof(VkGeometryAABBNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV);
    if (VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT == sType) return sizeof(VkWriteDescriptorSetInlineUniformBlockEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES == sType) return sizeof(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV == sType) return sizeof(VkPhysicalDeviceShadingRateImagePropertiesNV);
    if (VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT == sType) return sizeof(VkImportMemoryHostPointerInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES == sType) return sizeof(VkPhysicalDevicePrivateDataFeatures);
    if (VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineCoverageModulationStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV == sType) return sizeof(VkQueueFamilyCheckpointProperties2NV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV == sType) return sizeof(VkPhysicalDeviceCooperativeMatrixPropertiesNV);
    if (VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO == sType) return sizeof(VkDevicePrivateDataCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceASTCDecodeFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO == sType) return sizeof(VkPrivateDataSlotCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT == sType) return sizeof(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineViewportExclusiveScissorStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT == sType) return sizeof(VkBufferDeviceAddressCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES == sType) return sizeof(VkPhysicalDevicePipelineCreationCacheControlFeatures);
    if (VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR == sType) return sizeof(VkExternalBufferPropertiesKHR);
    if (VK_STRUCTURE_TYPE_MEMORY_BARRIER_2 == sType) return sizeof(VkMemoryBarrier2);
    if (VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 == sType) return sizeof(VkBufferMemoryBarrier2);
    if (VK_STRUCTURE_TYPE_DEPENDENCY_INFO == sType) return sizeof(VkDependencyInfo);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR == sType) return sizeof(VkDescriptorUpdateTemplateCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO == sType) return sizeof(VkSemaphoreSubmitInfo);
    if (VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR == sType) return sizeof(VkImportSemaphoreFdInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES == sType) return sizeof(VkPhysicalDeviceSynchronization2Features);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceCornerSampledImageFeaturesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES == sType) return sizeof(VkPhysicalDeviceImageRobustnessFeatures);
    if (VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR == sType) return sizeof(VkImportMemoryFdInfoKHR);
    if (VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2 == sType) return sizeof(VkCopyBufferInfo2);
    if (VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 == sType) return sizeof(VkCopyBufferToImageInfo2);
    if (VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 == sType) return sizeof(VkBlitImageInfo2);
    if (VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR == sType) return sizeof(VkMemoryOpaqueCaptureAddressAllocateInfoKHR);
    if (VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2 == sType) return sizeof(VkResolveImageInfo2);
    if (VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE == sType) return sizeof(VkMutableDescriptorTypeCreateInfoVALVE);
    if (VK_STRUCTURE_TYPE_IMAGE_BLIT_2 == sType) return sizeof(VkImageBlit2);
    if (VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 == sType) return sizeof(VkBufferImageCopy2);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceBufferAddressFeaturesEXT);
    if (VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX == sType) return sizeof(VkMultiviewPerViewAttributesInfoNVX);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES == sType) return sizeof(VkPhysicalDeviceSubgroupSizeControlProperties);
    if (VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO == sType) return sizeof(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo);
    if (VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM == sType) return sizeof(VkTilePropertiesQCOM);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES == sType) return sizeof(VkPhysicalDeviceInlineUniformBlockFeatures);
    if (VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK == sType) return sizeof(VkWriteDescriptorSetInlineUniformBlock);
    if (VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT == sType) return sizeof(VkDebugUtilsMessengerCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT == sType) return sizeof(VkVertexInputBindingDescription2EXT);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO == sType) return sizeof(VkDescriptorPoolInlineUniformBlockCreateInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES == sType) return sizeof(VkPhysicalDeviceTextureCompressionASTCHDRFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT == sType) return sizeof(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT);
    if (VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO == sType) return sizeof(VkRenderingAttachmentInfo);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO == sType) return sizeof(VkCommandBufferInheritanceRenderingInfo);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES == sType) return sizeof(VkPhysicalDeviceShaderIntegerDotProductFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES == sType) return sizeof(VkPhysicalDeviceShaderIntegerDotProductProperties);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceFragmentDensityMapFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES == sType) return sizeof(VkPhysicalDeviceTexelBufferAlignmentProperties);
    if (VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR == sType) return sizeof(VkDisplaySurfaceCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceConservativeRasterizationPropertiesEXT);
    if (VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 == sType) return sizeof(VkFormatProperties3);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES == sType) return sizeof(VkPhysicalDeviceMaintenance4Features);
    if (VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR == sType) return sizeof(VkSwapchainCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PRESENT_INFO_KHR == sType) return sizeof(VkPresentInfoKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT == sType) return sizeof(VkImageCompressionPropertiesEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR == sType) return sizeof(VkImageViewUsageCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR == sType) return sizeof(VkDeviceGroupPresentCapabilitiesKHR);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT == sType) return sizeof(VkRenderPassFragmentDensityMapCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV == sType) return sizeof(VkDeviceDiagnosticsConfigCreateInfoNV);
    if (VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR == sType) return sizeof(VkBindImageMemorySwapchainInfoKHR);
    if (VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR == sType) return sizeof(VkSamplerYcbcrConversionCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceLinearColorAttachmentFeaturesNV);
    if (VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR == sType) return sizeof(VkDisplayPresentInfoKHR);
    if (VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT == sType) return sizeof(VkDebugReportCallbackCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT == sType) return sizeof(VkDebugMarkerObjectNameInfoEXT);
    if (VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT == sType) return sizeof(VkDebugMarkerObjectTagInfoEXT);
    if (VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV == sType) return sizeof(VkDedicatedAllocationImageCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV == sType) return sizeof(VkDedicatedAllocationBufferCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceTransformFeedbackPropertiesEXT);
    if (VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX == sType) return sizeof(VkCuModuleCreateInfoNVX);
    if (VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX == sType) return sizeof(VkCuLaunchInfoNVX);
    if (VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX == sType) return sizeof(VkImageViewHandleInfoNVX);
    if (VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE == sType) return sizeof(VkPresentTimesInfoGOOGLE);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceLineRasterizationFeaturesEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX == sType) return sizeof(VkImageViewAddressPropertiesNVX);
    if (VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD == sType) return sizeof(VkTextureLODGatherFormatPropertiesAMD);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR == sType) return sizeof(VkDeviceGroupBindSparseInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDevicePipelineRobustnessPropertiesEXT);
    if (VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT == sType) return sizeof(VkRenderingFragmentDensityMapAttachmentInfoEXT);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD == sType) return sizeof(VkAttachmentSampleCountInfoAMD);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT);
    if (VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV == sType) return sizeof(VkExportMemoryAllocateInfoNV);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR == sType) return sizeof(VkDeviceGroupDeviceCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT == sType) return sizeof(VkValidationFlagsEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT == sType) return sizeof(VkImageViewASTCDecodeModeEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT == sType) return sizeof(VkPipelineRobustnessCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE == sType) return sizeof(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT == sType) return sizeof(VkPhysicalDevicePipelineRobustnessFeaturesEXT);
    if (VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR == sType) return sizeof(VkMemoryGetFdInfoKHR);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR == sType) return sizeof(VkSemaphoreGetFdInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceExclusiveScissorFeaturesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceConditionalRenderingFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI == sType) return sizeof(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI);
    if (VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT == sType) return sizeof(VkConditionalRenderingBeginInfoEXT);
    if (VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR == sType) return sizeof(VkPresentRegionsKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineDiscardRectangleStateCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineViewportWScalingStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV == sType) return sizeof(VkBindAccelerationStructureMemoryInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT == sType) return sizeof(VkPhysicalDevicePrivateDataFeaturesEXT);
    if (VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT == sType) return sizeof(VkDisplayPowerInfoEXT);
    if (VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD == sType) return sizeof(VkDisplayNativeHdrSurfaceCapabilitiesAMD);
    if (VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT == sType) return sizeof(VkSwapchainCounterCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceMemoryBudgetPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX == sType) return sizeof(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX);
    if (VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineViewportSwizzleStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceLineRasterizationPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceDiscardRectanglePropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceExternalMemoryHostPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineRasterizationConservativeStateCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR == sType) return sizeof(VkFenceGetFdInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDevicePerformanceQueryPropertiesKHR);
    if (VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV == sType) return sizeof(VkGeneratedCommandsInfoNV);
    if (VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV == sType) return sizeof(VkCooperativeMatrixPropertiesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR == sType) return sizeof(VkPhysicalDevicePerformanceQueryFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR == sType) return sizeof(VkPerformanceCounterDescriptionKHR);
    if (VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR == sType) return sizeof(VkQueryPoolPerformanceCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR == sType) return sizeof(VkBufferCopy2KHR);
    if (VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR == sType) return sizeof(VkPerformanceQuerySubmitInfoKHR);
    if (VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR == sType) return sizeof(VkAcquireProfilingLockInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV);
    if (VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR == sType) return sizeof(VkPerformanceCounterKHR);
    if (VK_STRUCTURE_TYPE_GEOMETRY_NV == sType) return sizeof(VkGeometryNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR == sType) return sizeof(VkPhysicalDeviceSurfaceInfo2KHR);
    if (VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR == sType) return sizeof(VkSurfaceCapabilities2KHR);
    if (VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL == sType) return sizeof(VkInitializePerformanceApiInfoINTEL);
    if (VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR == sType) return sizeof(VkSurfaceFormat2KHR);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR == sType) return sizeof(VkRenderPassAttachmentBeginInfoKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR == sType) return sizeof(VkPipelineRenderingCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR == sType) return sizeof(VkDisplayProperties2KHR);
    if (VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT == sType) return sizeof(VkShaderModuleValidationCacheCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR == sType) return sizeof(VkDisplayPlaneCapabilities2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR);
    if (VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR == sType) return sizeof(VkFramebufferAttachmentsCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT == sType) return sizeof(VkDebugUtilsLabelEXT);
    if (VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT == sType) return sizeof(VkDebugUtilsMessengerCallbackDataEXT);
    if (VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT == sType) return sizeof(VkSampleLocationsInfoEXT);
    if (VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT == sType) return sizeof(VkGraphicsPipelineLibraryCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineSampleLocationsStateCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT);
    if (VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV == sType) return sizeof(VkGeneratedCommandsMemoryRequirementsInfoNV);
    if (VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR == sType) return sizeof(VkWriteDescriptorSetAccelerationStructureKHR);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR == sType) return sizeof(VkAccelerationStructureGeometryInstancesDataKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD == sType) return sizeof(VkPhysicalDeviceShaderCorePropertiesAMD);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceMeshShaderFeaturesNV);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR == sType) return sizeof(VkAccelerationStructureBuildGeometryInfoKHR);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV == sType) return sizeof(VkAccelerationStructureMemoryRequirementsInfoNV);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR == sType) return sizeof(VkAccelerationStructureDeviceAddressInfoKHR);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR == sType) return sizeof(VkAccelerationStructureGeometryTrianglesDataKHR);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR == sType) return sizeof(VkAccelerationStructureGeometryKHR);
    if (VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR == sType) return sizeof(VkCopyImageInfo2KHR);
    if (VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR == sType) return sizeof(VkMemoryRequirements2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV);
    if (VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR == sType) return sizeof(VkCopyAccelerationStructureInfoKHR);
    if (VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR == sType) return sizeof(VkCopyAccelerationStructureToMemoryInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceAccelerationStructureFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT == sType) return sizeof(VkPrivateDataSlotCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR == sType) return sizeof(VkCopyMemoryToAccelerationStructureInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT == sType) return sizeof(VkPhysicalDevicePipelinePropertiesFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceAccelerationStructurePropertiesKHR);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR == sType) return sizeof(VkAccelerationStructureBuildSizesInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceRayTracingPipelineFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES == sType) return sizeof(VkPhysicalDeviceVariablePointerFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceRayTracingPipelinePropertiesKHR);
    if (VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL == sType) return sizeof(VkPerformanceOverrideInfoINTEL);
    if (VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR == sType) return sizeof(VkRayTracingPipelineCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR == sType) return sizeof(VkRayTracingShaderGroupCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV == sType) return sizeof(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV);
    if (VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR == sType) return sizeof(VkFormatProperties3KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT == sType) return sizeof(VkPhysicalDeviceImageDrmFormatModifierInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT == sType) return sizeof(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT == sType) return sizeof(VkImageDrmFormatModifierListCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT == sType) return sizeof(VkRenderPassCreationControlEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineViewportShadingRateImageStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceInheritedViewportScissorFeaturesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceShadingRateImageFeaturesNV);
    if (VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV == sType) return sizeof(VkRayTracingPipelineCreateInfoNV);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV == sType) return sizeof(VkAccelerationStructureCreateInfoNV);
    if (VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV == sType) return sizeof(VkGeometryTrianglesNV);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM == sType) return sizeof(VkRenderPassTransformBeginInfoQCOM);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV == sType) return sizeof(VkPhysicalDeviceRayTracingPropertiesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR);
    if (VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV == sType) return sizeof(VkRayTracingShaderGroupCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceDrmPropertiesEXT);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV == sType) return sizeof(VkAccelerationStructureInfoNV);
    if (VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR == sType) return sizeof(VkPipelineFragmentShadingRateStateCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDevicePCIBusInfoPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV == sType) return sizeof(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV);
    if (VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineRepresentativeFragmentTestStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE == sType) return sizeof(VkDescriptorSetLayoutHostMappingInfoVALVE);
    if (VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT == sType) return sizeof(VkFilterCubicImageViewImageFormatPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV);
    if (VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV == sType) return sizeof(VkCheckpointDataNV);
    if (VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT == sType) return sizeof(VkMemoryHostPointerPropertiesEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT == sType) return sizeof(VkImageViewMinLodCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR);
    if (VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR == sType) return sizeof(VkExportSemaphoreCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR == sType) return sizeof(VkQueueFamilyGlobalPriorityPropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV == sType) return sizeof(VkPhysicalDeviceMeshShaderPropertiesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceShaderImageFootprintFeaturesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL == sType) return sizeof(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL);
    if (VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL == sType) return sizeof(VkQueryPoolPerformanceQueryCreateInfoINTEL);
    if (VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL == sType) return sizeof(VkPerformanceMarkerInfoINTEL);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR == sType) return sizeof(VkRenderPassInputAttachmentAspectCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL == sType) return sizeof(VkPerformanceStreamMarkerInfoINTEL);
    if (VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL == sType) return sizeof(VkPerformanceConfigurationAcquireInfoINTEL);
    if (VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD == sType) return sizeof(VkSwapchainDisplayNativeHdrCreateInfoAMD);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceFragmentDensityMapPropertiesEXT);
    if (VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR == sType) return sizeof(VkFragmentShadingRateAttachmentInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceFragmentShadingRatePropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceFragmentShadingRateFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD == sType) return sizeof(VkPhysicalDeviceShaderCoreProperties2AMD);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD == sType) return sizeof(VkPhysicalDeviceCoherentMemoryFeaturesAMD);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE == sType) return sizeof(VkDescriptorSetBindingReferenceVALVE);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceMemoryPriorityFeaturesEXT);
    if (VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT == sType) return sizeof(VkMemoryPriorityAllocateInfoEXT);
    if (VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR == sType) return sizeof(VkSurfaceProtectedCapabilitiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceCooperativeMatrixFeaturesNV);
    if (VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV == sType) return sizeof(VkPipelineCoverageReductionStateCreateInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceTimelineSemaphorePropertiesKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineRasterizationLineStateCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR == sType) return sizeof(VkPipelineInfoKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR == sType) return sizeof(VkPipelineExecutablePropertiesKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR == sType) return sizeof(VkPipelineExecutableStatisticKHR);
    if (VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR == sType) return sizeof(VkPipelineExecutableInternalRepresentationKHR);
    if (VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV == sType) return sizeof(VkGraphicsShaderGroupCreateInfoNV);
    if (VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT == sType) return sizeof(VkVertexInputAttributeDescription2EXT);
    if (VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV == sType) return sizeof(VkIndirectCommandsLayoutTokenNV);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV == sType) return sizeof(VkCommandBufferInheritanceViewportScissorInfoNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM == sType) return sizeof(VkCommandBufferInheritanceRenderPassTransformInfoQCOM);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT == sType) return sizeof(VkRenderPassSubpassFeedbackCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT);
    if (VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR == sType) return sizeof(VkCopyImageToBufferInfo2KHR);
    if (VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR == sType) return sizeof(VkSparseImageMemoryRequirements2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceRobustness2FeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceRobustness2PropertiesEXT);
    if (VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT == sType) return sizeof(VkSamplerCustomBorderColorCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceCustomBorderColorPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceCustomBorderColorFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR == sType) return sizeof(VkPhysicalDevicePresentIdFeaturesKHR);
    if (VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT == sType) return sizeof(VkDevicePrivateDataCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceDiagnosticsConfigFeaturesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV);
    if (VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV == sType) return sizeof(VkAccelerationStructureMotionInfoNV);
    if (VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT == sType) return sizeof(VkImageCompressionControlEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT == sType) return sizeof(VkImageSubresource2EXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV == sType) return sizeof(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT);
    if (VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR == sType) return sizeof(VkSubpassBeginInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT == sType) return sizeof(VkPipelineViewportDepthClipControlCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI == sType) return sizeof(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI);
    if (VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV == sType) return sizeof(VkMemoryGetRemoteAddressInfoNV);
    if (VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT == sType) return sizeof(VkPipelinePropertiesIdentifierEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT);
    if (VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT == sType) return sizeof(VkSubpassResolvePerformanceQueryEXT);
    if (VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT == sType) return sizeof(VkMultisampledRenderToSingleSampledInfoEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT == sType) return sizeof(VkPipelineColorWriteCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceMaintenance4PropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceImageViewMinLodFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceMultiDrawFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceMultiDrawPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT);
    if (VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT == sType) return sizeof(VkSamplerBorderColorComponentMappingCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE == sType) return sizeof(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM == sType) return sizeof(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR == sType) return sizeof(VkDeviceGroupCommandBufferBeginInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM == sType) return sizeof(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM);
    if (VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM == sType) return sizeof(VkSubpassFragmentDensityMapOffsetEndInfoQCOM);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM == sType) return sizeof(VkPhysicalDeviceImageProcessingPropertiesQCOM);
    if (VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR == sType) return sizeof(VkMemoryDedicatedAllocateInfoKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM == sType) return sizeof(VkImageViewSampleWeightCreateInfoQCOM);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT == sType) return sizeof(VkPipelineShaderStageModuleIdentifierCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR == sType) return sizeof(VkImageFormatListCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT == sType) return sizeof(VkShaderModuleIdentifierEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM == sType) return sizeof(VkPhysicalDeviceTilePropertiesFeaturesQCOM);
    if (VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR == sType) return sizeof(VkImageSparseMemoryRequirementsInfo2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC == sType) return sizeof(VkPhysicalDeviceAmigoProfilingFeaturesSEC);
    if (VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR == sType) return sizeof(VkPipelineTessellationDomainOriginStateCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC == sType) return sizeof(VkAmigoProfilingSubmitInfoSEC);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES == sType) return sizeof(VkPhysicalDeviceShaderDrawParameterFeatures);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT);
    if (VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT == sType) return sizeof(VkDebugReportCallbackCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR == sType) return sizeof(VkRenderingAttachmentInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceDynamicRenderingFeaturesKHR);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR == sType) return sizeof(VkCommandBufferInheritanceRenderingInfoKHR);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV == sType) return sizeof(VkAttachmentSampleCountInfoNV);
    if (VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR == sType) return sizeof(VkBindBufferMemoryInfoKHR);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR == sType) return sizeof(VkRenderPassMultiviewCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceMultiviewPropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR == sType) return sizeof(VkPhysicalDeviceFeatures2KHR);
    if (VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR == sType) return sizeof(VkFormatProperties2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR == sType) return sizeof(VkPhysicalDeviceImageFormatInfo2KHR);
    if (VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR == sType) return sizeof(VkQueueFamilyProperties2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR == sType) return sizeof(VkPhysicalDeviceMemoryProperties2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR == sType) return sizeof(VkPhysicalDeviceSparseImageFormatInfo2KHR);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR == sType) return sizeof(VkDeviceGroupRenderPassBeginInfoKHR);
    if (VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR == sType) return sizeof(VkDeviceGroupSubmitInfoKHR);
    if (VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR == sType) return sizeof(VkBindBufferMemoryDeviceGroupInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceGroupPropertiesKHR);
    if (VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR == sType) return sizeof(VkExternalImageFormatPropertiesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR == sType) return sizeof(VkPhysicalDeviceExternalBufferInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceIDPropertiesKHR);
    if (VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR == sType) return sizeof(VkExternalMemoryBufferCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR == sType) return sizeof(VkExternalMemoryImageCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR == sType) return sizeof(VkBindImagePlaneMemoryInfoKHR);
    if (VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR == sType) return sizeof(VkExportMemoryAllocateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR == sType) return sizeof(VkPhysicalDeviceExternalSemaphoreInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR);
    if (VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR == sType) return sizeof(VkBufferDeviceAddressInfoKHR);
    if (VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR == sType) return sizeof(VkBufferMemoryRequirementsInfo2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR == sType) return sizeof(VkPhysicalDevice16BitStorageFeaturesKHR);
    if (VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT == sType) return sizeof(VkSurfaceCapabilities2EXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceImagelessFramebufferFeaturesKHR);
    if (VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR == sType) return sizeof(VkFramebufferAttachmentImageInfoKHR);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR == sType) return sizeof(VkAttachmentDescription2KHR);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR == sType) return sizeof(VkAttachmentReference2KHR);
    if (VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR == sType) return sizeof(VkSubpassDescription2KHR);
    if (VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR == sType) return sizeof(VkRenderPassCreateInfo2KHR);
    if (VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR == sType) return sizeof(VkDeviceBufferMemoryRequirementsKHR);
    if (VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR == sType) return sizeof(VkSubpassEndInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR == sType) return sizeof(VkPhysicalDeviceExternalFenceInfoKHR);
    if (VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR == sType) return sizeof(VkExternalFencePropertiesKHR);
    if (VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR == sType) return sizeof(VkExportFenceCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceVariablePointersFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceVariablePointerFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT);
    if (VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT == sType) return sizeof(VkSamplerReductionModeCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceInlineUniformBlockFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceInlineUniformBlockPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PIPELINE_INFO_EXT == sType) return sizeof(VkPipelineInfoEXT);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT == sType) return sizeof(VkDescriptorPoolInlineUniformBlockCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR == sType) return sizeof(VkImageMemoryRequirementsInfo2KHR);
    if (VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR == sType) return sizeof(VkSamplerYcbcrConversionInfoKHR);
    if (VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR == sType) return sizeof(VkImagePlaneMemoryRequirementsInfoKHR);
    if (VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR == sType) return sizeof(VkSamplerYcbcrConversionImageFormatPropertiesKHR);
    if (VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR == sType) return sizeof(VkBindImageMemoryInfoKHR);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT == sType) return sizeof(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceDescriptorIndexingFeaturesEXT);
    if (VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT == sType) return sizeof(VkBufferDeviceAddressInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceDescriptorIndexingPropertiesEXT);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT == sType) return sizeof(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT);
    if (VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR == sType) return sizeof(VkDescriptorSetLayoutSupportKHR);
    if (VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT == sType) return sizeof(VkDeviceQueueGlobalPriorityCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR == sType) return sizeof(VkPhysicalDeviceDriverPropertiesKHR);
    if (VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR == sType) return sizeof(VkSubpassDescriptionDepthStencilResolveKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR);
    if (VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR == sType) return sizeof(VkSemaphoreTypeCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR == sType) return sizeof(VkTimelineSemaphoreSubmitInfoKHR);
    if (VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL == sType) return sizeof(VkQueryPoolCreateInfoINTEL);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT);
    if (VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR == sType) return sizeof(VkAttachmentReferenceStencilLayoutKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT == sType) return sizeof(VkPhysicalDeviceToolPropertiesEXT);
    if (VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT == sType) return sizeof(VkImageStencilUsageCreateInfoEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR);
    if (VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR == sType) return sizeof(VkBufferOpaqueCaptureAddressCreateInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceHostQueryResetFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR);
    if (VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR == sType) return sizeof(VkMemoryBarrier2KHR);
    if (VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR == sType) return sizeof(VkBufferMemoryBarrier2KHR);
    if (VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR == sType) return sizeof(VkImageMemoryBarrier2KHR);
    if (VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR == sType) return sizeof(VkDependencyInfoKHR);
    if (VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR == sType) return sizeof(VkSubmitInfo2KHR);
    if (VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR == sType) return sizeof(VkCommandBufferSubmitInfoKHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceImageRobustnessFeaturesEXT);
    if (VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR == sType) return sizeof(VkCopyBufferToImageInfo2KHR);
    if (VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR == sType) return sizeof(VkBlitImageInfo2KHR);
    if (VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR == sType) return sizeof(VkResolveImageInfo2KHR);
    if (VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR == sType) return sizeof(VkImageCopy2KHR);
    if (VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR == sType) return sizeof(VkBufferImageCopy2KHR);
    if (VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR == sType) return sizeof(VkImageResolve2KHR);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT == sType) return sizeof(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT);
    if (VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT == sType) return sizeof(VkQueueFamilyGlobalPriorityPropertiesEXT);
    if (VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR == sType) return sizeof(VkPhysicalDeviceMaintenance4FeaturesKHR);
    if (VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR == sType) return sizeof(VkDeviceImageMemoryRequirementsKHR);
    MAGMA_ASSERT(false);
    return 0;
}
} // namespace magma
